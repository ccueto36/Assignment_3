

BINARY SEARCH TREES

*A Binary Tree is a data structure made up of elements called nodes, usually containing a node called root as its main node.

*Binary Trees contain left and right nodes, which are usually called subtrees. The nodes to the left and to the right of each node (if any) are 
called the children of that node. Consequently, that node is the parent of its left and right children.
(********ILLUSTRATE PARENT-CHILD RELATIONSHIP WITH AN EXAMPLE BST ON THE LEFT********)

----Question # 1
Which of the nodes below is the child of node A?
	A. Node B
	B. Node C
	C. Node D
	D. Node E
 
*A binary search tree(BST) is a special type of Binary Tree that has certain conditions:
	*All nodes stored in the left subtree of a node K must be of value less than or equal to K.
	*All nodes stored in the right subtree of a node K must be of value more than K.
(*******TREE PRINTED ON THE LEFT SHOULD CONTAIN A CORRECT BST AND AN INCORRECT ONE*******)

*If BST's are printed using a inorder traversal technique, the printout will result in a lowest to highest printout.

----Question # 2
Is the tree in Figure 1.1 (shown on the left) a Binary Search Tree? (***PRINOUT OF A RANDOM BST ON THE LEFT, USER DETERMINES CORRECTEDNESS***)
	A. True
	B. False

*A node which has no children of its own is said to be a "leaf" node. 

----Question # 3
Determine which of the nodes in Fig 1.3 (shown on the left) is a leaf node? (***PRINOUT OF BST WITH LEAF NODES***)
	A. 
	B.
	C.
	D.











